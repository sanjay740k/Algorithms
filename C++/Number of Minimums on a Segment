#include<bits/stdc++.h>
using namespace std;
#define int long long
#define fi first
#define se second
#define pb push_back
#define pr pair<int,int>
#define mod 1000000007
#define INF 1000000000
#define endl "\n"

struct node { 
    int min; 
    int cnt; 
};

int st[400001][2] , arr[100001] ,n;

void build(int x , int lx , int rx)
{
	if(rx-lx == 1){
	    if(lx<n){
	        st[x][0] = arr[lx];st[x][1]=1;
	    }
	    return;
	}
 
	int m = (lx + rx)/2;
	build(2*x+1 , lx , m);
	build(2*x+2 , m , rx);
 
	st[x][0] = min(st[2*x+1][0] , st[2*x+2][0]);
	if(st[2*x+1][0] == st[2*x+2][0])
	    st[x][1] = st[2*x+1][1] + st[2*x+2][1];
	else if(st[2*x+1][0] < st[2*x+2][0])
	    st[x][1] = st[2*x+1][1];
	else 
	    st[x][1] = st[2*x+2][1];
}
 
node query(int x , int l , int r , int lx , int rx)
{
  node tmp;
	if(lx>=r || l>=rx){
	    tmp.min = tmp.cnt = INF; 
	    return tmp;
  }
	if(lx>=l && rx<=r){
	  tmp.min=st[x][0];
	  tmp.cnt=st[x][1];
	return tmp;
  }
	int m = (lx+rx)/2;
	node s1 = query(2*x+1 , l , r , lx , m);
	node s2 = query(2*x+2 , l , r , m , rx);
	
    node s; 
    s.min = min(s1.min, s2.min); 
    if (s1.min == s2.min) 
        s.cnt = s2.cnt + s1.cnt; 
    else if (s1.min < s2.min) 
        s.cnt = s1.cnt; 
    else
        s.cnt = s2.cnt; 
    return s; 
}
void update(int i , int x , int lx , int rx){
  if(rx - lx == 1){
      st[x][0]=arr[i];
      return ;
  }
  int m = (lx+rx)/2;
  if(i < m) update(i , 2*x+1 , lx , m);
  else      update(i , 2*x+2 , m , rx);
    
  st[x][0]=min(st[2*x+1][0],st[2*x+2][0]);
  if(st[2*x+1][0] == st[2*x+2][0])
	    st[x][1] = st[2*x+1][1] + st[2*x+2][1];
	else if(st[2*x+1][0] < st[2*x+2][0])
	    st[x][1] = st[2*x+1][1];
	else 
	    st[x][1] = st[2*x+2][1];
}

void solve()
{
	int m,i,x,l,r;
	cin >> n >> m ;
	//int a[n];
	for(i=0;i<n;i++){
	    cin >> arr[i];
	}
	build(0 , 0 , n);
	for(i=0;i<m;i++){
	    cin >> x >> l >> r;
	    if(x==1){
	        arr[l]=r;
	        update(l , 0 , 0 , n);
	    }
	    else{
	        node ss = query(0 , l , r , 0 , n) ;
	        cout<< ss.min << ' ' << ss.cnt <<endl;
	    }
	}
}

int32_t main()
{
	ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL);
	int t=1;//cin>>t;
	for(int i=1;i<=t;i++){	solve();}
	return 0;
}
